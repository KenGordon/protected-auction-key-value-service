# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

services:
  #
  # SSP system
  #
  kvserver-ssp:
    image: bazel/production/packaging/aws/data_server:server_docker_image
    entrypoint:
    - /server/bin/init_server_basic
    - --port=2000
    - --delta_directory=/srvdata/deltas
    - --realtime_directory=/srvdata/realtime_data
    - --mode=SSP
    - --internal_lookup_deadline_duration=1s
    hostname: kv-server
    networks:
    - kvserver-ssp-net
    volumes:
    - type: bind
      read_only: true
      source: ${SUT_DATA_DIR}/kvserver-ssp/data
      target: /srvdata/deltas
    - type: tmpfs
      target: /srvdata/realtime_data
      tmpfs:
        size: 1MB
  # envoy proxy specific to the K/V server instance
  kvserver-ssp-envoy-proxy:
    image: envoyproxy/envoy:distroless-v1.26-latest
    command:
    - -c
    - /etc/envoy.yaml
    depends_on:
      kvserver-ssp:
        condition: service_started
    hostname: kv-server-envoy
    networks:
      kvserver-ssp-net:
        aliases:
        - ssp-kv-envoy
    volumes:
    - type: bind
      source: ${SUT_DATA_DIR}/kvserver-ssp/etc/envoy_kvserver.yaml
      target: /etc/envoy.yaml

  #
  # DSP 1 system
  #
  kvserver-dsp1:
    image: bazel/production/packaging/aws/data_server:server_docker_image
    entrypoint:
    - /server/bin/init_server_basic
    - --port=2000
    - --delta_directory=/srvdata/deltas
    - --realtime_directory=/srvdata/realtime_data
    - --mode=DSP
    - --internal_lookup_deadline_duration=1s
    hostname: kv-server
    networks:
    - kvserver-dsp1-net
    volumes:
    - type: bind
      read_only: true
      source: ${SUT_DATA_DIR}/kvserver-dsp1/data
      target: /srvdata/deltas
    - type: tmpfs
      target: /srvdata/realtime_data
      tmpfs:
        size: 2MB
  # envoy proxy specific to the K/V server instance
  kvserver-dsp1-envoy-proxy:
    image: envoyproxy/envoy:distroless-v1.26-latest
    command:
    - -c
    - /etc/envoy.yaml
    depends_on:
      kvserver-dsp1:
        condition: service_started
    hostname: kv-server-envoy
    networks:
      kvserver-dsp1-net:
        aliases:
        - dsp1-kv-envoy
    volumes:
    - type: bind
      source: ${SUT_DATA_DIR}/kvserver-dsp1/etc/envoy_kvserver.yaml
      target: /etc/envoy.yaml

  #
  # DSP 2 system
  #
  kvserver-dsp2:
    image: bazel/production/packaging/aws/data_server:server_docker_image
    entrypoint:
    - /server/bin/init_server_basic
    - --port=2000
    - --delta_directory=/srvdata/deltas
    - --realtime_directory=/srvdata/realtime_data
    - --mode=DSP
    - --internal_lookup_deadline_duration=1s
    hostname: kv-server
    networks:
    - kvserver-dsp2-net
    volumes:
    - type: bind
      read_only: true
      source: ${SUT_DATA_DIR}/kvserver-dsp2/data
      target: /srvdata/deltas
    - type: tmpfs
      target: /srvdata/realtime_data
      tmpfs:
        size: 2MB
  # envoy proxy specific to the K/V server instance
  kvserver-dsp2-envoy-proxy:
    image: envoyproxy/envoy:distroless-v1.26-latest
    command:
    - -c
    - /etc/envoy.yaml
    depends_on:
      kvserver-dsp2:
        condition: service_started
    hostname: kv-server-envoy
    networks:
      kvserver-dsp2-net:
        aliases:
        - dsp2-kv-envoy
    volumes:
    - type: bind
      source: ${SUT_DATA_DIR}/kvserver-dsp2/etc/envoy_kvserver.yaml
      target: /etc/envoy.yaml

  #
  # frontend envoy proxy routing to the SSP and multiple DSPs
  #
  frontend-envoy-proxy:
    image: envoyproxy/envoy:distroless-v1.26-latest
    command:
    - -c
    - /etc/envoy.yaml
    depends_on:
      kvserver-ssp:
        condition: service_started
      kvserver-ssp-envoy-proxy:
        condition: service_started
      kvserver-dsp1:
        condition: service_started
      kvserver-dsp1-envoy-proxy:
        condition: service_started
      kvserver-dsp2:
        condition: service_started
      kvserver-dsp2-envoy-proxy:
        condition: service_started
    hostname: frontend-envoy
    networks:
    - frontend-net
    - kvserver-ssp-net
    - kvserver-dsp1-net
    - kvserver-dsp2-net
    volumes:
    - type: bind
      source: ${SUT_DATA_DIR}/frontend/etc/envoy_frontend.yaml
      target: /etc/envoy.yaml
networks:
  kvserver-ssp-net:
    name: multiple-servers-kvserver-ssp
    driver: bridge
  kvserver-dsp1-net:
    name: multiple-servers-kvserver-dsp1
    driver: bridge
  kvserver-dsp2-net:
    name: multiple-servers-kvserver-dsp2
    driver: bridge
  frontend-net:
    name: multiple-servers-frontend
    driver: bridge
