#!/bin/bash

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Test runner for the build system. This script should preferably be run
# "directly" and not inside docker, permitting the test cases to execute
# both inside and outside a docker container.

set -o pipefail
set -o errexit

trap _cleanup EXIT
function _cleanup() {
  declare -r -i STATUS=$?
  if [[ ${STATUS} -ne 0 ]]; then
    printf "Error: run-tests status code: %d\n" "${STATUS}" &>/dev/stderr
  fi
  exit ${STATUS}
}

function usage() {
  declare -r -i exitval=$?
  cat &>/dev/stderr <<USAGE
usage:
  $0 <options>
      --network <name>    docker network name
USAGE
  exit ${exitval}
}

while [[ $# -gt 0 ]]; do
  case "$1" in
    --network)
      DOCKER_NETWORK="$2"
      shift 2
      ;;
    -h | --help) usage 0 ;;
    *)
      printf "unrecognized arg: %s\n" "$1"
      usage
      ;;
  esac
done

: "${DOCKER_NETWORK?"--network flag not specified"}"

TESTS_DIR="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
readonly TESTS_DIR
readonly TOOLS_DIR="${TESTS_DIR}"/../builders/tools

declare -a TEST_ARGS=(
  "--test_env=GREETER_ENDPOINT=greeter:50051"
  "--test_env=ROUTEGUIDE_ENDPOINT=route_guide:50051"
  "--test_env=DOCKER_NETWORK=${DOCKER_NETWORK}"
  "--test_env=TEST_TOOLS_IMAGE=$("${TOOLS_DIR}"/get-builder-image-tagged --image test-tools)"
)

declare -a TESTS=("//tests/test_cases/grpc:all")
"${TOOLS_DIR}"/bazel-debian test "${TESTS[@]}" "${TEST_ARGS[@]}"
