// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/rpc/status.proto";

package kv_server;

// Internal Lookup Service API.
service InternalLookupService {
  // Endpoint for querying the server's internal datastore. Should only be used
  // within TEEs.
  rpc InternalLookup(InternalLookupRequest) returns (InternalLookupResponse) {}
}

// Lookup request for internal datastore.
message InternalLookupRequest {
  // List of keys to look up.
  repeated string keys = 1;
}

// Lookup response from internal datastore.
//
// Each key in the request has a corresponding map entry in the response.

// The value of the entry is a SingleLookupResult, which is either the value
// from the datastore or a status in case of an error.
//
// Examples of possible error scenarios:
// - Key is missing from internal datastore
// - Error during lookup from a sharded datastore
message InternalLookupResponse {
  map<string, SingleLookupResult> kv_pairs = 1;
}

// Lookup result for a single key that is either a string value or a status.
message SingleLookupResult {
  oneof single_lookup_result {
    string value = 1;
    google.rpc.Status status = 2;
  }
}
