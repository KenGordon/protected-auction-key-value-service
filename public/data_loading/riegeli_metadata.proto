// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package kv_server;

import "public/base_types.proto";
import "riegeli/records/records_metadata.proto";

// Metadata specific to DELTA files.
message DeltaMetadata {}

// Metadata specific to SNAPSHOT files.
message SnapshotMetadata {
  // [Required]
  // (1) Name of the previous snapshot file used to generate this snapshot or
  // (2) Name of the oldest delta file included in the snapshot.
  optional string starting_file = 1;

  // [Required]
  // Name of the most recent delta file included in the snapshot.
  optional string ending_delta_file = 2;
}

// Defines boundaries for a logical shard in a data file. All shard records are
// strictly contained by the byte range specified by `start_index` and
// `end_index`.
message Shard {
  // Byte index where the shard starts.
  optional int64 start_index = 1;

  // Byte index where the shard ends.
  optional int64 end_index = 2;
}

// Metadata specifying whether the file is sharded and if so, shard boundaries.
message ShardsMetadata {
  // Whether the file is logically sharded or not.
  optional bool is_sharded_file = 1;

  // Metadata about logical shards in the file.
  repeated Shard shards = 2;
}

// All K/V server metadata related to one riegeli file.
message KVFileMetadata {
  // All records in one file are from this namespace.
  optional KeyNamespace.Enum key_namespace = 1 [deprecated = true];

  oneof file_type {
    DeltaMetadata delta = 2;
    SnapshotMetadata snapshot = 3;
  }

  optional ShardsMetadata shards_metadata = 4;
}

extend riegeli.RecordsMetadata {
  optional KVFileMetadata kv_file_metadata = 20220706;
}
